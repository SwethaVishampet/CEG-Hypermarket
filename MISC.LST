8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MISC
OBJECT MODULE PLACED IN MISC.OBJ
ASSEMBLER INVOKED BY:  E:\OKAYPL~1\ASM86.EXE MISC.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $mod186
                             2 +1  $EP
                             3     NAME MISC
                             4     ; Interrupt and misc routines for uPD70208 microcomputer system
                             5     ;
                             6     ; Filename:     MISC.ASM
                             7     ;
                             8     ; Author:       Dr Tay Teng Tiow
                             9     ; Address:      Department of Electrical Engineering 
                            10     ;               National University of Singapore
                            11     ;               10, Kent Ridge Crescent
                            12     ;               Singapore 0511. 
                            13     ; Date:         3rd November 1991
                            14     ;
                            15     ; This file contains proprietory information and cannot be copied 
                            16     ; or distributed without prior permission from the author.
                            17     ;---------------------------------------------------------------------------
                            18     
                            19     public  print_char, print_2hex, iodefine, set_timers
                            20     extrn   serial_rec_action:far,timer2_action:far ,timer1_action:far
                            21     
----                        22     INT_VEC_SEG     SEGMENT         AT      0H
                            23     ; Define the interrupt vector locations
                            24     ; System reserved interrupts
0000                        25                     ORG     0000H
0000 ????????               26             DIV_ZERO        DD      ?       ;not defined yet
0004 ????????               27             SINGLE_STEP     DD      ?       ;not defined yet
0008 ????????               28             NMI_INPUT       DD      ?       ;start of downloaded program
000C ????????               29             BRK_3_VEC       DD      ?       ;not defined yet
0010 ????????               30             OVERFLOW        DD      ?       ;not defined yet
0014 ????????               31             ARRAY_BND       DD      ?       ;Array Bounds
0020                        32                     ORG     020H
0020 ????????               33             TIMER0_VEC      DD      ? ;route for timer 0
                            34     ; Interrupt control unit
0030                        35                     ORG     030H
0030 C300----       R       36             INTP0           DD      SERIAL_INTR
0034 ????????               37             INTP1           DD      ?       ;external, not used yet  
0038 ????????               38             INTP2           DD      ?       ;external, not used yet
003C ????????               39             INTP3           DD      ?       ;external, not used yet
0040 ????????               40             NUMERICS        DD      ?       ;
0044 ????????               41             RSVED           DD      ?       ;system reserved 
0048 3E01----       R       42             TIMER1_VEC      DD      TIMER1_INTR      ;route for timer 1
004C 4D01----       R       43                     TIMER2_VEC      DD      TIMER2_INTR       ;Timer2 Route
                            44                ;Reserved from 050H to 080H     
0080                        45                    ORG     080H
                            46     ;Interrupt Vector addrerss from 080h (type 32) to 3fCH (type 255)
                            47     ;are avaiable for user software interrupt           
                            48     ; Software interrupts
0080 ????????               49             SOFT0           DD      ? ;TYPE 32
0084 ????????               50             SOFT1           DD      ? ;TYPE 33
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

0088 ????????               51             SOFT2           DD      ?
008C ????????               52             SOFT3           DD      ?
0090 ????????               53             SOFT4           DD      ?
0094 ????????               54             SOFT5           DD      ?
0098 ????????               55             SOFT6           DD      ?
009C ????????               56             SOFT7           DD      ?
----                        57     INT_VEC_SEG     ENDS
                            58     
                            59     
                            60     
----                        61     INT_RAM_AREA    SEGMENT
  0080                      62             QUEUE_LEN       EQU     128
                            63     
0000 (128                   64             QUEUE_TRANS     DB      QUEUE_LEN DUP(?)
     ??
     )
0080 0000                   65             QUEUE_HEAD      DW      0H
0082 0000                   66             QUEUE_TAIL      DW      0H
----                        67     INT_RAM_AREA    ENDS
                            68     
                            69     
                            70 +1  $include(80188.inc)
                      =1    71     ;IO Setup for 80C188XL 
                      =1    72     ;By Zhu Shunyu
                      =1    73     
  FFA0                =1    74              UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                =1    75              LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                =1    76              PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                =1    77              MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                      =1    78     
                      =1    79     
                      =1    80     ; Initial 80C188XL UCS Pin
                      =1    81     ; |start address|block size| value for No waits, No Ready   
                      =1    82     ;   FE000H            8K                 3E04H
                      =1    83     ;   FC000H           16K                 3C04H
                      =1    84     ;   F8000H           32K                 3804H
                      =1    85      
                      =1    86              
                      =1    87     ; Initialize Upper Chip Select pin with 8K ROM 
                      =1    88     ;         MOV DX, UMCR
                      =1    89     ;         MOV AX, 03E04H
                      =1    90     ;         OUT DX, AX
                      =1    91     
                      =1    92     ; Initialize Lower Chip Select pin with 8k RAM
                      =1    93     ;         MOV DX, LMCR
                      =1    94     ;         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last shoud be 5H for
                                    1 waits      
                      =1    95     ;         OUT DX, AL
                      =1    96     ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF           =1    97              MOV DX, MPCS
0003 B88300           =1    98              MOV AX, 0083H
0006 EE               =1    99              OUT DX, AL
                      =1   100     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF           =1   101              MOV DX, PCSBA
000A B80300           =1   102              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

000D EE               =1   103              OUT DX, AL
                      =1   104     
                      =1   105     ;Serial port definition and initialize 
  0000                =1   106              SRB     EQU       00H ; Serial Receiver Buffer Register (R)
  0000                =1   107              STB     EQU       00H ; Serial Transmitter Holding Register(W)  
  0001                =1   108              SIER    EQU       01H ; Serial Interrupte Enable Register (w)
  0002                =1   109              IIR     EQU       02H ; Interrupt Identification Register (R)
  0003                =1   110              SMD     EQU       03H ; Serial Line Control Register
  0005                =1   111              SST     EQU       05H ; Serial Line Status Register
  0000                =1   112              DLL     EQU       00H ; Divisor Latch Least Significant BYTE
  0001                =1   113              DLM     EQU       01H ; Divisor Latch most  Significant BYTE
                      =1   114     
                      =1   115     ;Definition of content of SST register
                      =1   116     ;|Not Use|TE|THRE|BI|FE|PE|OE|DR|
                      =1   117     ;TE Transmitter empty
                      =1   118     ;THRE Transmittor Holding Register Empty
                      =1   119     ;BI Breakr Interrupt
                      =1   120     ;FE Framing Error
                      =1   121     ;PE Parity Error
                      =1   122     ;OE Overrun Error 
                      =1   123     ;DR Data Ready
  0001                =1   124               REC_RDY    EQU   00000001B
  0020                =1   125               TRAN_RDY   EQU   00100000B
  000E                =1   126               ERR_DET    EQU   00001110B
  0010                =1   127               BREAK_DET  EQU   00010000B
                      =1   128     ; Serial Line Control Data
  0007                =1   129             SMD_DATA     EQU    00000111B
  0003                =1   130             S_INT_ENA    EQU    00000011B
  0000                =1   131             S_INT_DIS    EQU    00000000B
                      =1   132        
                      =1   133     ;1st bit set 1 to access the Divisor latch 
                      =1   134     ;2 stop bits, 8 data bits, no parity check
  0087                =1   135             SMD_DATA_DIV EQU    10000111B
                      =1   136     ; Set divisor value        
000E BA0300           =1   137             MOV DX, SMD
0011 B087             =1   138             MOV AL, SMD_DATA_DIV
0013 EE               =1   139             OUT DX, AL
0014 BA0000           =1   140             MOV DX, DLL
0017 B034             =1   141             MOV AL, 52
0019 EE               =1   142             OUT DX, AL
001A BA0100           =1   143             MOV DX, DLM
001D B000             =1   144             MOV AL, 0
001F EE               =1   145             OUT DX, AL
                      =1   146     ;SET SERIAL PORT WORKING MODE
0020 BA0300           =1   147              MOV DX, SMD
0023 B007             =1   148              MOV AL, SMD_DATA
0025 EE               =1   149              OUT DX, AL
                      =1   150     ;DISABLE SERIAL PORT INT
0026 BA0100           =1   151              MOV DX, SIER
0029 B000             =1   152              MOV AL, 0
002B EE               =1   153              OUT DX, AL
                      =1   154     
                      =1   155     
                      =1   156     
                      =1   157     ; Timer control Unit
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   158       
  FF66                =1   159              T2_CON    EQU      0FF66H ; Timer 2 Control Register
  FF62                =1   160              T2_CA     EQU      0FF62H ; Timer 2 compare register
  FF60                =1   161              T2_CNT    EQU      0FF60H ;
                      =1   162     
  FF5E                =1   163              T1_CON    EQU      0FF5EH ;
  FF5C                =1   164              T1_CB     EQU      0FF5CH ;
  FF5A                =1   165              T1_CA     EQU      0FF5AH ;
  FF58                =1   166              T1_CNT    EQU      0FF58H
                      =1   167              
  FF56                =1   168              T0_CON    EQU      0FF56H ;
  FF54                =1   169              T0_CB     EQU      0FF54H ;
  FF52                =1   170              T0_CA     EQU      0FF52H ;
  FF50                =1   171              TO_CNT    EQU      0FF50H   
                      =1   172              
                      =1   173     ; Timer Control Data
                      =1   174     
                      =1   175     
                      =1   176     ;Interrupt Control Registers
                      =1   177           
                      =1   178     
  FF3E                =1   179             INT3_CTRL       EQU 0FF3EH ;Interrupt 3 Control Register
  FF3C                =1   180             INT2_CTRL       EQU 0FF3CH
  FF3A                =1   181             INT1_CTRL       EQU 0FF3AH
  FF38                =1   182             INT0_CTRL       EQU 0FF38H
  FF32                =1   183             TIMER_CTRL      EQU 0FF32H ;Timer Interrupt Control Register
  FF30                =1   184             ISR             EQU 0FF30H ; Interrupt Status Register
  FF22                =1   185             EOI             EQU 0FF22H ; END OF INTERRUPT REGISTER
                      =1   186             
  FF28                =1   187             IMKW            EQU 0FF28H ; Interrupt Mask 
  FF2A                =1   188             IPMK            EQU 0FF2Ah ; Interrupt Priority Mask 
                      =1   189     
                      =1   190     ;| - | - | - | - |MSK|PM2|PM1|PM0| For TCU INT
                      =1   191     
                      =1   192     ;| - |SFNM|CAS|LVL|MSK|PM2|PM1|PM0| For TCU INT0,1
                      =1   193     
                      =1   194     ;MSK 1-enable, 0-mask int 
                      =1   195     ;pm0-pm1 Priority
                      =1   196     
                      =1   197         
                           198     
                           199     
----                       200     MISC_ROUTINE    SEGMENT
                           201     ASSUME CS:MISC_ROUTINE
                           202     
                           203     ; ---This procdeure initialize the system I/O area and on-chip devices-----
0000                       204     IODEFINE        PROC    FAR
0000 50                    205                     PUSH    AX
0001 52                    206                     PUSH    DX
                           207     
                           208     ; Initialize SCU for operation
0002 B007                  209                     MOV     AL,SMD_DATA
0004 E603                  210                     OUT     SMD,AL
                           211     ; Enable serial interrupts
0006 B003                  212                     MOV     AL,S_INT_ENA
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

0008 E601                  213                     OUT     SIER,AL
                           214     ; =============== INITIALIZATION OF INTERRUPT CONTROL UNIT =============
                           215     ; Initialize ICU for operation
                           216                     
                           217     ; Mask all interrupts except SCU
                           218                     ;disable TX interrupt,ENABLE RX.
000A B001                  219                     MOV     AL,1
000C E601                  220                     OUT     SIER,AL
                           221     ; SCU use INT0, enable INT0             
000E BA38FF                222                     MOV     DX, INT0_CTRL
0011 33C0                  223                     XOR     AX,AX
0013 EE                    224                     OUT     DX,AL
                           225     ; Mask other Int
0014 FA                    226                     CLI
0015 BA28FF                227                     MOV     DX,IMKW
0018 B8EE00                228                     MOV     AX,0EEH
001B EE                    229                     OUT     DX,AL   
001C 5A                    230                     POP     DX
001D 58                    231                     POP     AX
001E CB                    232                     RET
                           233     IODEFINE        ENDP
                           234     
                           235     
                           236     
                           237     
                           238     
                           239     ; ----------------Start of procedure PRINT_2HEX ------------------------
001F                       240     PRINT_2HEX      PROC    FAR
  0000                     241             QUE_BASE        EQU     OFFSET QUEUE_TRANS
                           242     ; The byte to be printed as 2 HEX number is put into AL.
                           243     ; This procedure is then called.
001F 9A6800----     R      244                     CALL    FAR PTR CHAR2HEX
                           245     ; Result is return in AX
0024 50                    246                     PUSH    AX
0025 8AC4                  247                     MOV     AL,AH
0027 9A3300----     R      248                     CALL    FAR PTR PRINT_CHAR
002C 58                    249                     POP     AX
002D 9A3300----     R      250                     CALL    FAR PTR PRINT_CHAR
0032 CB                    251                     RET
                           252     PRINT_2HEX      ENDP
                           253     
                           254     
                           255     
                           256     
                           257     ; ---------------- Start of procedure PRINT_CHAR ------------------------
0033                       258     PRINT_CHAR      PROC    FAR
                           259     ; This procedure is called to put a character into queue for transmission
                           260     ; through the serial port. 
                           261     ; The data to be transmitted is put in AL before the procedure is called.
                           262     ; Data is put at the tail. Queue_tail is then inc to point to next loc.
                           263     ; Data is taken from the head. Queue_head is then inc to point to next data.
                           264             
0033 53                    265                     PUSH    BX                      ;Save BX        
0034 06                    266                     PUSH    ES
                           267     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

0035 50                    268                     PUSH    AX
                           269     
0036 BB----         R      270                     MOV     BX,SEG QUEUE_TAIL       ;Init segment register.
0039 8EC3                  271                     MOV     ES,BX                   ;ES now contains seg of INT_RAM_AREA
                           272     
003B E401                  273                     IN      AL,SIER                 ;disable TX interrupt.
003D 24FD                  274                     AND     AL,11111101B
003F E601                  275                     OUT     SIER,AL
                           276     
0041 58                    277                     POP     AX
0042 268B1E8200            278                     MOV     BX,ES:QUEUE_TAIL                
0047 268807                279                     MOV     ES:QUE_BASE[BX],AL      ;Put data to queue_tail.
004A 26FF068200            280                     INC     ES:QUEUE_TAIL           ;Increment queue_tail
004F 26813E82008000        281                     CMP     ES:QUEUE_TAIL,QUEUE_LEN ;and wrap around
0056 7C07                  282                     JL      L_PRINT1                ;to zero if needed.
0058 26C70682000000        283                     MOV     ES:QUEUE_TAIL,0
005F                       284     L_PRINT1:       
005F E401                  285                     IN      AL,SIER                 ;enable TX interrupt
0061 0C02                  286                     OR      AL,00000010B
0063 E601                  287                     OUT     SIER,AL
                           288     
0065 07                    289                     POP     ES
0066 5B                    290                     POP     BX
0067 CB                    291                     RET
                           292     PRINT_CHAR      ENDP
                           293     
                           294     
                           295     
                           296     
                           297     ;------------------Start of Procedure CHAR2HEX ----------------------------
0068                       298     CHAR2HEX        PROC    FAR
                           299     ; Char to be converted to HEX is put in AL before calling this procedure.
                           300     ; HEX version is return in AX.
0068 8AE0                  301                     MOV     AH,AL
006A 240F                  302                     AND     AL,00001111B
006C 3C09                  303                     CMP     AL,9
006E 7F05                  304                     JG      GT9_1
0070 0C30                  305                     OR      AL,00110000B
0072 EB0590                306                     JMP     DIGIT2
0075 2C09                  307     GT9_1:          SUB     AL,9
0077 0C40                  308                     OR      AL,01000000B
0079                       309     DIGIT2:
0079 C0EC04                310                     SHR     AH,4
007C 80FC09                311                     CMP     AH,9
007F 7F06                  312                     JG      GT9_2
0081 80CC30                313                     OR      AH,00110000B
0084 EB0790                314                     JMP     DONE
0087 80EC09                315     GT9_2:          SUB     AH,9
008A 80CC40                316                     OR      AH,01000000B
008D                       317     DONE:
008D CB                    318                     RET
                           319     CHAR2HEX        ENDP
                           320     
008E                       321     Set_timers      proc Far
008E 50                    322             push ax
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

008F 52                    323             push dx
                           324     
                           325             ;Timer 0 ---Voice
                           326             ; MOV AX, 0
                           327             ; MOV DX, T0_CNT
                           328             ; OUT DX, AX
                           329     
                           330             ; MOV AX, 250           ; 125 us
                           331             ; MOV DX, T0_CA
                           332             ; OUT DX, AX
                           333             
                           334             ; MOV AX, 0E001H
                           335             ; MOV DX, T0_CON
                           336             ; OUT DX, AX
                           337             ;Initialize Timer1       ---- Keypad and LCD display (2nd priority)
0090 B80000                338             mov ax, 0;
0093 BA58FF                339             mov dx, T1_CNT;
0096 EE                    340             OUT DX, AL
                           341     
                           342             ;MOV AX, 25000;
                           343             ;MOV AX, 60000;
0097 B88813                344             MOV AX, 5000;
009A BA5AFF                345             MOV DX, T1_CA;
009D EE                    346             OUT DX, AL
                           347     
009E B801E0                348             MOV AX,0E001H
00A1 BA5EFF                349             MOV DX, T1_CON
00A4 EE                    350             OUT DX, AL
                           351     
                           352             
                           353             ;Initialize Timer2      -----7segment LED
00A5 B80000                354             mov ax, 0;
00A8 BA60FF                355             mov dx, T2_CNT;
00AB EE                    356             OUT DX, AL
                           357     
                           358             ;MOV AX, 5000; changing from this to 250 4th dec 8pm
                           359             ;MOV AX, 25000; original value
00AC B8FA00                360             MOV AX, 250 ;changed for sound
00AF BA62FF                361             MOV DX, T2_CA;
00B2 EE                    362             OUT DX, AL
                           363     
00B3 B801E0                364             MOV AX,0E001H
00B6 BA66FF                365             MOV DX, T2_CON
00B9 EE                    366             OUT DX, AL
                           367     
00BA BA32FF                368             MOV DX, TIMER_CTRL
00BD B001                  369             MOV AL, 01H
00BF EE                    370             OUT DX, AL
                           371             
00C0 5A                    372             pop dx
00C1 58                    373             pop ax
                           374     
00C2 CB                    375     ret
                           376     Set_timers endp
                           377     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           378     
                           379     ; reset_timer2      proc Far
                           380             ; push ax
                           381             ; push dx
                           382             
                           383             ; ;Initialize Timer2    -----7segment LED
                           384             ; mov ax, 0;
                           385             ; mov dx, T2_CNT;
                           386             ; OUT DX, AL
                           387     
                           388             ; MOV AX, 1631;
                           389             ; MOV DX, T2_CA;
                           390             ; OUT DX, AL
                           391     
                           392             ; MOV AX,0E001H
                           393             ; MOV DX, T2_CON
                           394             ; OUT DX, AL
                           395     
                           396             ; MOV DX, TIMER_CTRL
                           397             ; MOV AL, 01H
                           398             ; OUT DX, AL
                           399             
                           400             ; pop dx
                           401             ; pop ax
                           402     
                           403     ; ret
                           404     ; reset_timer2 endp
                           405     ; ************************************************************************
                           406     ;                       INTERRUPT ROUTINES                               *
                           407     ; ************************************************************************
                           408     
                           409     ; **************** Start of SERIAL_INTR service routine ******************
                           410     
                           411     ;*****************CAUTION*****************
                           412     ;At the end of interrutp routines, you must write EOI (end of Int) +
                           413     ;with the INT type (INT0-type 12) (timer-type 8)                   +    
                           414     ;comment added by Zhu Shunyu    March,2000                         +            
                                              
                           415     ;Interrupt Routines Modified accordly to fit 80C188XL
                           416     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00C3                       417     SERIAL_INTR:
00C3 50                    418                     PUSH    AX                      ;save registers
00C4 53                    419                     PUSH    BX
00C5 52                    420                     PUSH    DX
                           421     
                           422            
                           423     
                           424                                    
00C6 E402                  425                     IN      AL,IIR                  ;read in serial INT ID
00C8 2407                  426                     AND     AL,00000111B
00CA 3C04                  427                     CMP     AL,00000100B            ;check if rx interrupt
00CC 740F                  428                     JE      RECEIVE_INTR
                           429     
00CE 3C02                  430                     CMP     AL,00000010B            ;check if tx interrupt
00D0 741D                  431                     JE      TRANSMIT_INTR
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

                           432     
                           433                     
                           434     ;RESET_INT_CTL
00D2 BA22FF                435                     MOV DX, EOI
00D5 B80C00                436                     MOV AX, 12
00D8 EE                    437                     OUT DX, AL
                           438     
00D9 5A                    439                     POP     DX
00DA 5B                    440                     POP     BX                      ;false serial interrupt
00DB 58                    441                     POP     AX
00DC CF                    442                     IRET                            ;return
                           443     
00DD                       444     RECEIVE_INTR:   
                           445                   
00DD E400                  446                     IN      AL,SRB                  
                           447     ; Information received will be used by user routine
                           448     ; Action to be taken will be contained in SERIAL_REC_ACTION
00DF 9A0000----     E      449                     CALL    FAR PTR SERIAL_REC_ACTION
                           450                     
00E4 BA22FF                451                     MOV DX, EOI
00E7 B80C00                452                     MOV AX, 12
00EA EE                    453                     OUT DX, AL
00EB 5A                    454                     POP     DX
00EC 5B                    455                     POP     BX                      ;false serial interrupt
00ED 58                    456                     POP     AX
00EE CF                    457                     IRET
                           458     
00EF                       459     TRANSMIT_INTR:
                           460                    
00EF 06                    461                     PUSH    ES                      ;save ES
00F0 BB----         R      462                     MOV     BX,SEG QUEUE_TAIL       ;set ES to SERIAL_Q_SEG
00F3 8EC3                  463                     MOV     ES,BX
00F5 268B1E8200            464                     MOV     BX,ES:QUEUE_TAIL
00FA 263B1E8000            465                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
00FF 742B                  466                     JE      L_TX2
0101 268B1E8000            467                     MOV     BX,ES:QUEUE_HEAD        ;get data from queue
0106 268A07                468                     MOV     AL,ES:QUE_BASE[BX]
0109 E600                  469                     OUT     STB,AL                  ;tx data
010B 26FF068000            470                     INC     ES:QUEUE_HEAD           ;point to next data
0110 26813E80008000        471                     CMP     ES:QUEUE_HEAD,QUEUE_LEN ;wrap around if necessary
0117 7C07                  472                     JL      L_TX1
0119 26C70680000000        473                     MOV     ES:QUEUE_HEAD,0
0120                       474     L_TX1:          
0120 268B1E8200            475                     MOV     BX,ES:QUEUE_TAIL
0125 263B1E8000            476                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
012A 7506                  477                     JNE     L_TX3
012C                       478     L_TX2:
012C E401                  479                     IN      AL,SIER                 ;no more, disable TX interrupt.
012E 24FD                  480                     AND     AL,11111101B
0130 E601                  481                     OUT     SIER,AL
0132                       482     L_TX3:
                           483                     
                           484     ;RESET_INT_CTL
0132 BA22FF                485                     MOV DX, EOI
0135 B80C00                486                     MOV AX, 12
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     06:09:05  12/05/;2  PAGE   10


LOC  OBJ                  LINE     SOURCE

0138 EE                    487                     OUT DX, AL
0139 07                    488                     POP     ES                      ;restore original ES(transmit)
                           489                     
013A 5A                    490                     POP     DX 
013B 5B                    491                     POP     BX                      ;return serial interrupt
013C 58                    492                     POP     AX
013D CF                    493                     IRET
                           494     ; **************** End of SERIAL_INTR service routine ************************
                           495     
                           496     
                           497     ; **************** Start of TIMER1_INTR service routine ******************
013E                       498     TIMER1_INTR:
013E 50                    499                     PUSH    AX
                           500                     
                           501     ; Action to be taken on timer1 interrupt to be written by user
013F 9A0000----     E      502                     CALL    FAR PTR TIMER1_ACTION
                           503                   
0144 58                    504                     POP     AX              ;return interrupt
                           505                     ;RESET_INT_CTL
0145 BA22FF                506                     MOV DX, EOI
0148 B80800                507                     MOV AX, 8
014B EE                    508                     OUT DX, AL
014C CF                    509                     IRET
                           510     ; **************** End of TIMER1_INTR service routine ************************
                           511     
                           512     ; **************** Start of TIMER2_INTR service routine ******************
014D                       513     TIMER2_INTR:
014D 50                    514                     PUSH    AX
                           515                     
                           516     ; Action to be taken on timer2 interrupt to be written by user
014E 9A0000----     E      517                     CALL    FAR PTR TIMER2_ACTION
                           518                 
                           519     ;============== for sound
                           520     
0153 B821E0                521                     MOV AX,0E021H ; 1110 0000 0000 0001
0156 BA66FF                522                     MOV DX, T2_CON
0159 EE                    523                     OUT DX, AL     
                           524     
                           525     
                           526     ;============== end of for sound
                           527     
                           528                             
015A 58                    529                     POP     AX              ;return interrupt
                           530                     ;RESET_INT_CTL
015B BA22FF                531                     MOV DX, EOI
015E B80800                532                     MOV AX, 8
0161 EE                    533                     OUT DX, AL
0162 CF                    534                     IRET
                           535     ; **************** End of TIMER2_INTR service routine ************************
                           536     
----                       537     MISC_ROUTINE    ENDS
                           538     
                           539     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
